<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.login.gai.dao.UsersMapper">
  <resultMap id="BaseResultMap" type="com.login.gai.domain.Users">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="mailbox" jdbcType="VARCHAR" property="mailbox" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="personal_note" jdbcType="VARCHAR" property="personalNote" />
    <result column="signature" jdbcType="VARCHAR" property="signature" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="isvalid" jdbcType="INTEGER" property="isvalid" />
    <result column="rversion" jdbcType="INTEGER" property="rversion" />
    <result column="reserved1" jdbcType="VARCHAR" property="reserved1" />
    <result column="reserved2" jdbcType="VARCHAR" property="reserved2" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, mailbox, username, personal_note, signature, create_time, modify_time, isvalid, 
    rversion, reserved1, reserved2
  </sql>
  <select id="selectByExample" parameterType="com.login.gai.domain.UsersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.login.gai.domain.UsersExample">
    delete from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.login.gai.domain.Users">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into users (id, mailbox, username, 
      personal_note, signature, create_time, 
      modify_time, isvalid, rversion, 
      reserved1, reserved2)
    values (#{id,jdbcType=INTEGER}, #{mailbox,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{personalNote,jdbcType=VARCHAR}, #{signature,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{isvalid,jdbcType=INTEGER}, #{rversion,jdbcType=INTEGER}, 
      #{reserved1,jdbcType=VARCHAR}, #{reserved2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.login.gai.domain.Users">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="mailbox != null">
        mailbox,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="personalNote != null">
        personal_note,
      </if>
      <if test="signature != null">
        signature,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="isvalid != null">
        isvalid,
      </if>
      <if test="rversion != null">
        rversion,
      </if>
      <if test="reserved1 != null">
        reserved1,
      </if>
      <if test="reserved2 != null">
        reserved2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=INTEGER},
      <if test="mailbox != null">
        #{mailbox,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="personalNote != null">
        #{personalNote,jdbcType=VARCHAR},
      </if>
      <if test="signature != null">
        #{signature,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isvalid != null">
        #{isvalid,jdbcType=INTEGER},
      </if>
      <if test="rversion != null">
        #{rversion,jdbcType=INTEGER},
      </if>
      <if test="reserved1 != null">
        #{reserved1,jdbcType=VARCHAR},
      </if>
      <if test="reserved2 != null">
        #{reserved2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.login.gai.domain.UsersExample" resultType="java.lang.Integer">
    select count(*) from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update users
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.mailbox != null">
        mailbox = #{record.mailbox,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.personalNote != null">
        personal_note = #{record.personalNote,jdbcType=VARCHAR},
      </if>
      <if test="record.signature != null">
        signature = #{record.signature,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isvalid != null">
        isvalid = #{record.isvalid,jdbcType=INTEGER},
      </if>
      <if test="record.rversion != null">
        rversion = #{record.rversion,jdbcType=INTEGER},
      </if>
      <if test="record.reserved1 != null">
        reserved1 = #{record.reserved1,jdbcType=VARCHAR},
      </if>
      <if test="record.reserved2 != null">
        reserved2 = #{record.reserved2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update users
    set id = #{record.id,jdbcType=INTEGER},
      mailbox = #{record.mailbox,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      personal_note = #{record.personalNote,jdbcType=VARCHAR},
      signature = #{record.signature,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      isvalid = #{record.isvalid,jdbcType=INTEGER},
      rversion = #{record.rversion,jdbcType=INTEGER},
      reserved1 = #{record.reserved1,jdbcType=VARCHAR},
      reserved2 = #{record.reserved2,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.login.gai.domain.Users">
    update users
    <set>
      <if test="mailbox != null">
        mailbox = #{mailbox,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="personalNote != null">
        personal_note = #{personalNote,jdbcType=VARCHAR},
      </if>
      <if test="signature != null">
        signature = #{signature,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isvalid != null">
        isvalid = #{isvalid,jdbcType=INTEGER},
      </if>
      <if test="rversion != null">
        rversion = #{rversion,jdbcType=INTEGER},
      </if>
      <if test="reserved1 != null">
        reserved1 = #{reserved1,jdbcType=VARCHAR},
      </if>
      <if test="reserved2 != null">
        reserved2 = #{reserved2,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.login.gai.domain.Users">
    update users
    set mailbox = #{mailbox,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      personal_note = #{personalNote,jdbcType=VARCHAR},
      signature = #{signature,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      isvalid = #{isvalid,jdbcType=INTEGER},
      rversion = #{rversion,jdbcType=INTEGER},
      reserved1 = #{reserved1,jdbcType=VARCHAR},
      reserved2 = #{reserved2,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>